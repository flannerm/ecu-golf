<Application x:Class="ECU.Golf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:ECU.Golf.Views"
             xmlns:viewModels="clr-namespace:ECU.Golf.ViewModels"
             xmlns:converters="clr-namespace:ECU.Golf.Converters"
             Startup="Application_Startup">
    <Application.Resources>

        <ResourceDictionary>

            <DataTemplate DataType="{x:Type viewModels:ChatMessageViewModel}">
                <views:ChatMessageView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:LeaderboardScreenViewModel}">
                <views:LeaderboardScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PairingsScreenViewModel}">
                <views:PairingsScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:TrackingScreenViewModel}">
                <views:TrackingScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:HoleStatsScreenViewModel}">
                <views:HoleStatsScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:HistoryScreenViewModel}">
                <views:HistoryScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:ResearchScreenViewModel}">
                <views:ResearchScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:ShotLogScreenViewModel}">
                <views:ShotLogScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:TwitterScreenViewModel}">
                <views:TwitterScreenView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PlayerViewModel}">
                <views:PlayerView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PlayerClothingViewModel}">
                <views:PlayerClothingView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:TrackingHoleViewModel}">
                <views:TrackingHoleView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PlayerTrackingViewModel}">
                <views:PlayerTrackingView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PlayerShotTrackingViewModel}">
                <views:PlayerShotTrackingView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PairingViewModel}">
                <views:PairingView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:PlayerPopupViewModel}">
                <views:PlayerPopupView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:ScorecardViewModel}">
                <views:ScorecardView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:HoleStatsVerticalViewModel}">
                <views:HoleStatsVerticalView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:HoleStatsHorizontalViewModel}">
                <views:HoleStatsHorizontalView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:TweetViewModel}">
                <views:TweetView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:MapViewModel}">
                <views:MapView />
            </DataTemplate>

            <converters:BackgroundConverter x:Key="backgroundConverter" />
            <converters:ZeroScoreConverter x:Key="zeroScoreConverter" />
            <converters:ScoreToImageConverter x:Key="scoreToImageConverter" />
            <converters:BoolToImageConverter x:Key="boolToImageConverter" />
            <converters:EnumToBoolConverter x:Key="enumToBoolConverter" />
            <converters:NumToBoolConverter x:Key="numToBoolConverter" />
            <converters:BoolToColorTextConverter x:Key="boolToColorTextConverter" />
            <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
            <converters:StringToColorConverter x:Key="stringToColorConverter" />
            <converters:StatusToColorConverter x:Key="statusToColorConverter" />
            
            <Style x:Key="PlayerLineFont" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="/ECU.Golf;component/Fonts/#Klavika"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontSize" Value="32"/>
            </Style>

            <Style x:Key="StandardFont" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="/ECU.Golf;component/Fonts/#Klavika"/>
                <!--<Setter Property="FontWeight" Value="Medium"/>-->
            </Style>

            <Style x:Key="StandardFontTB" TargetType="TextBox">
                <Setter Property="FontFamily" Value="/ECU.Golf;component/Fonts/#Klavika"/>
                <Setter Property="FontWeight" Value="Medium"/>
            </Style>

            <Style x:Key="StandardFontCB" TargetType="ComboBox">
                <Setter Property="FontFamily" Value="/ECU.Golf;component/Fonts/#Klavika"/>
                <Setter Property="FontWeight" Value="Medium"/>
            </Style>

            <Style x:Key="ScorecardFont" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="/ECU.Golf;component/Fonts/#Klavika"/>
                <Setter Property="FontWeight" Value="Medium"/>
            </Style>

            <Style x:Key="TitleFont" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="/ECU.Golf;component/Fonts/#Futura Md BT"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>


            <Style x:Key="ChatItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background">
                    <Setter.Value>
                        <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource backgroundConverter}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="ItemBorder" BorderThickness="0" Opacity="1" Margin="0,0,0,7.5">
                                <ContentPresenter>

                                </ContentPresenter>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="ItemBorder" Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
         
            <Style x:Key="ListBoxNoSelection" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="ItemBorder" Background="Transparent" BorderThickness="0" Opacity="1" Margin="0,0,0,7.5">
                                <ContentPresenter  />
                            </Border>

                            <!--This will remove any selection highlighting-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="ItemBorder" Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ListViewNoSelection" TargetType="ListViewItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="ItemBorder" Background="Transparent" BorderThickness="0" Opacity="1" Margin="0,0,0,7.5">
                                <ContentPresenter  />
                            </Border>

                            <!--This will remove any selection highlighting-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="ItemBorder" Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HistoryListBox" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <StackPanel Orientation="Vertical" Name="sp">
                                <TextBlock Name="tb" Style="{StaticResource StandardFont}" FontSize="28" Text="{Binding Value}" Foreground="White"/>
                                <Image Source="/ECU.Golf;component/Images/divider.png" Stretch="UniformToFill"/>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="sp" Property="Background" Value="#E1AE53"/>
                                    <Setter TargetName="tb" Property="Foreground" Value="Black"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SilverFrame" TargetType="Border">
                <Setter Property="BorderThickness">
                    <Setter.Value>
                        <Thickness Left="10" Right="10" Top="30" Bottom="10"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="2"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0.00" Color="#ffffffff"/>
                                <GradientStop Offset="0.07" Color="#ffb2b2b2"/>
                                <GradientStop Offset="0.49" Color="#ffcccccc"/>
                                <GradientStop Offset="0.71" Color="#ffc9c9c9"/>
                                <GradientStop Offset="1.00" Color="#ff656565"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border Name="Border" Background="#ffb2b2b2" BorderBrush="Black" BorderThickness="0" CornerRadius="8,8,0,0">
                                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="0,2,12,2"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Panel.ZIndex" Value="100" />
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <RadialGradientBrush>
                                                <GradientStop Color="#5c94fb" Offset="0"/>
                                                <GradientStop Color="#5c94fb" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <!--<Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Purple" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Yellow" />
                                    <Setter Property="Foreground" Value="Pink" />
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TabControlSilverFrame"  TargetType="TabControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" Background="Transparent" />
                                <Border Grid.Row="1" CornerRadius="0,6,6,6" >
                                    <Border.BorderThickness>
                                        <Thickness Left="10" Right="10" Top="10" Bottom="10"/>
                                    </Border.BorderThickness>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush>
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0.00" Color="#ffffffff"/>
                                                <GradientStop Offset="0.07" Color="#ffb2b2b2"/>
                                                <GradientStop Offset="0.49" Color="#ffcccccc"/>
                                                <GradientStop Offset="0.71" Color="#ffc9c9c9"/>
                                                <GradientStop Offset="1.00" Color="#ff656565"/>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <ContentPresenter ContentSource="SelectedContent" />
                                </Border>
                            </Grid>
                            
                            
                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Offset="0.00" Color="#ffffffff"/>
                                <GradientStop Offset="0.07" Color="#ffb2b2b2"/>
                                <GradientStop Offset="0.49" Color="#ffcccccc"/>
                                <GradientStop Offset="0.71" Color="#ffc9c9c9"/>
                                <GradientStop Offset="1.00" Color="#ff656565"/>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="30" />
                <Setter Property="MinWidth" Value="30" />
            </Style>

            <ControlTemplate x:Key="NakedButton" TargetType="{x:Type Button}">
                <Border>
                    <ContentPresenter/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsFocused" Value="True"/>
                    <Trigger Property="IsDefaulted" Value="True"/>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="RegularButton" TargetType="{x:Type Button}">
                <Grid>
                    <Rectangle x:Name="GelBackground" Opacity="1" RadiusX="9" RadiusY="9" Fill="{TemplateBinding Background}" StrokeThickness="0.35">
                        <Rectangle.Stroke>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="#666666" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Stroke>
                    </Rectangle>
                    <Rectangle x:Name="GelShine" Margin="2,2,2,0" VerticalAlignment="Top" RadiusX="6" RadiusY="6" Opacity="1" Stroke="Transparent" Height="15px">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#ccffffff" Offset="0"/>
                                <GradientStop Color="Transparent" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Fill" TargetName="GelBackground">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <!--<GradientStop Color="#F9D162" Offset="0"/>
                                                <GradientStop Color="#F9D162" Offset="1"/>-->
                                    <GradientStop Color="#5c94fb" Offset="0"/>
                                    <GradientStop Color="#5c94fb" Offset="1"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Fill" TargetName="GelBackground">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <GradientStop Color="#ffcc00" Offset="0"/>
                                    <GradientStop Color="#cc9900" Offset="1"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="RoundButton" TargetType="{x:Type RadioButton}">
                <Grid>
                    <Rectangle x:Name="GelBackground" Opacity="1" RadiusX="9" RadiusY="9" Fill="{TemplateBinding Background}" StrokeThickness="0.35">
                        <Rectangle.Stroke>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="#666666" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Stroke>
                    </Rectangle>
                    <Rectangle x:Name="GelShine" Margin="2,2,2,0" VerticalAlignment="Top" RadiusX="6" RadiusY="6" Opacity="1" Stroke="Transparent" Height="15px">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#ccffffff" Offset="0"/>
                                <GradientStop Color="Transparent" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"
                             TextBlock.Foreground="Black" TextBlock.FontFamily="/ECU.Golf;component/Fonts/#Klavika" TextBlock.FontWeight="Medium"
                             TextBlock.FontSize="22pt"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Fill" TargetName="GelBackground">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <!--<GradientStop Color="#F9D162" Offset="0"/>
                                    <GradientStop Color="#F9D162" Offset="1"/>-->
                                    <GradientStop Color="#5c94fb" Offset="0"/>
                                    <GradientStop Color="#5c94fb" Offset="1"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Fill" TargetName="GelBackground">
                            <Setter.Value>
                                <RadialGradientBrush>
                                    <!--<GradientStop Color="#ffcc00" Offset="0"/>
                                    <GradientStop Color="#cc9900" Offset="1"/>-->
                                    <GradientStop Color="#5c94fb" Offset="0"/>
                                    <GradientStop Color="#5c94fb" Offset="1"/>
                                </RadialGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="NavButton" TargetType="{x:Type RadioButton}">
                <Grid Width="170" Height="35">
                    <Image x:Name="ButtonOff" Source="/ECU.Golf;component/Images/nav_btn_off.png" Visibility="Visible" Stretch="Fill" />
                    <Image x:Name="ButtonOn" Source="/ECU.Golf;component/Images/nav_btn_on.png" Visibility="Hidden" Stretch="Fill"/>
                    <Viewbox StretchDirection="DownOnly" Stretch="Fill">
                        <ContentPresenter x:Name="Content" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" 
                             TextBlock.Foreground="Black" TextBlock.FontFamily="/ECU.Golf;component/Fonts/#Klavika Bold"
                             TextBlock.FontSize="18pt"/>
                    </Viewbox>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="ButtonOff" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="ButtonOn" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="Content" Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="ButtonOff" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="ButtonOn" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="Content" Property="TextBlock.Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="ButtonOff" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="ButtonOn" Property="Visibility" Value="Hidden"/>
                        <Setter TargetName="Content" Property="TextBlock.Foreground" Value="Gray"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

        </ResourceDictionary>

    </Application.Resources>
</Application>
